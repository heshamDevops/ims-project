version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: ims_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ims-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node.js Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: ims_backend
    environment:
      - NODE_ENV=development
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - JWT_SECRET=${JWT_SECRET}
      - BACKEND_PORT=${BACKEND_PORT}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ims-network
    restart: unless-stopped

  # React.js Frontend (Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: ims_frontend
    environment:
      - VITE_API_URL=${VITE_API_URL}
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app:cached      # mount host folder for hot reload
      - /app/node_modules           # preserve container node_modules
    depends_on:
      - backend
    networks:
      - ims-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  ims-network:
    driver: bridge